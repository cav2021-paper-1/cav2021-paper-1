$[ examples/cav/revelt/proof/dv.mm $]

$( axiom {R} \forall{R}(K2:SortK{}, \forall{R}(K1:SortKItem{}, \exists{R}(Val:SortK{}, \equals{SortK{}, R}(Val:SortK{}, kseq{}(K1:SortKItem{}, K2:SortK{}))))) $)
KSEQ-axiom-2 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-K2 ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-Val ( \kore-symbol-kseq kore-element-var-K1 kore-element-var-K2 ) ) ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortK{}, \equals{SortK{}, R}(Val:SortK{}, dotk{}())) $)
KSEQ-axiom-3 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-Val \kore-symbol-dotk ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortCell{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortCell{}, SortKItem{}}(From:SortCell{})))) $)
REVELT-axiom-0 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortCell kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortCell \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortKCellOpt{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}}(From:SortKCellOpt{})))) $)
REVELT-axiom-1 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortKCellOpt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortGeneratedCounterCellOpt{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(From:SortGeneratedCounterCellOpt{})))) $)
REVELT-axiom-2 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortGeneratedCounterCell{}, \exists{R}(Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R}(Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}}(From:SortGeneratedCounterCell{})))) $)
REVELT-axiom-3 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCellOpt kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortKCell{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortKCell{}, SortKItem{}}(From:SortKCell{})))) $)
REVELT-axiom-4 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKCell kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortKCell \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortKCell{}, \exists{R}(Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R}(Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}}(From:SortKCell{})))) $)
REVELT-axiom-5 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKCell kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortKCell \kore-sort-SortKCellOpt kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortSet{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortSet{}, SortKItem{}}(From:SortSet{})))) $)
REVELT-axiom-6 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortSet \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortRECElt{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortRECElt{}, SortKItem{}}(From:SortRECElt{})))) $)
REVELT-axiom-7 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortRECElt kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortRECElt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortGeneratedCounterCell{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortGeneratedCounterCell{}, SortKItem{}}(From:SortGeneratedCounterCell{})))) $)
REVELT-axiom-8 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortGeneratedCounterCell \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortGeneratedTopCell{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}}(From:SortGeneratedTopCell{})))) $)
REVELT-axiom-9 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortGeneratedTopCell kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortGeneratedTopCell \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortRECList{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortRECList{}, SortKItem{}}(From:SortRECList{})))) $)
REVELT-axiom-10 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortRECList kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortRECList \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortList{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortList{}, SortKItem{}}(From:SortList{})))) $)
REVELT-axiom-11 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortList kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortList \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortBool{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortBool{}, SortKItem{}}(From:SortBool{})))) $)
REVELT-axiom-12 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortKCell{}, \exists{R}(Val:SortCell{}, \equals{SortCell{}, R}(Val:SortCell{}, inj{SortKCell{}, SortCell{}}(From:SortKCell{})))) $)
REVELT-axiom-13 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKCell kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortKCell \kore-sort-SortCell kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortInt{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortInt{}, SortKItem{}}(From:SortInt{})))) $)
REVELT-axiom-14 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortInt kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortGeneratedTopCellFragment{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}}(From:SortGeneratedTopCellFragment{})))) $)
REVELT-axiom-15 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortGeneratedTopCellFragment kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(From:SortMap{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortMap{}, SortKItem{}}(From:SortMap{})))) $)
REVELT-axiom-16 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-From ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-inj \kore-sort-SortMap \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) ) $.

$( axiom {R, SortSort} \forall{R}(K0:SortBool{}, \forall{R}(K1:SortSort, \forall{R}(K2:SortSort, \exists{R}(Val:SortSort, \equals{SortSort, R}(Val:SortSort, Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort)))))) $)
REVELT-axiom-17 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-forall-sort kore-sort-var-SortSort ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K0 ( \kore-forall kore-sort-var-SortSort kore-sort-var-R kore-element-var-K1 ( \kore-forall kore-sort-var-SortSort kore-sort-var-R kore-element-var-K2 ( \kore-exists kore-sort-var-SortSort kore-sort-var-R kore-element-var-Val ( \kore-equals kore-sort-var-SortSort kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort kore-sort-var-SortSort kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 ) ) ) ) ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortList{}, \equals{SortList{}, R}(Val:SortList{}, Lbl'Stop'List{}())) $)
REVELT-axiom-18 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortList kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortList kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'List ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortMap{}, \equals{SortMap{}, R}(Val:SortMap{}, Lbl'Stop'Map{}())) $)
REVELT-axiom-19 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortSet{}, \equals{SortSet{}, R}(Val:SortSet{}, Lbl'Stop'Set{}())) $)
REVELT-axiom-20 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Set ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortInt{}, \exists{R}(Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R}(Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{})))) $)
REVELT-axiom-21 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortInt kore-sort-var-R kore-element-var-K0 ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortKCell{}, \forall{R}(K1:SortGeneratedCounterCell{}, \exists{R}(Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R}(Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortKCell{}, K1:SortGeneratedCounterCell{}))))) $)
REVELT-axiom-23 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKCell kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortGeneratedTopCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortKCellOpt{}, \forall{R}(K1:SortGeneratedCounterCellOpt{}, \exists{R}(Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R}(Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortKCellOpt{}, K1:SortGeneratedCounterCellOpt{}))))) $)
REVELT-axiom-25 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortGeneratedTopCellFragment kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedTopCellFragment kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortK{}, \exists{R}(Val:SortKCell{}, \equals{SortKCell{}, R}(Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{})))) $)
REVELT-axiom-27 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-K0 ( \kore-exists \kore-sort-SortKCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-K0 ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortKItem{}, \exists{R}(Val:SortList{}, \equals{SortList{}, R}(Val:SortList{}, LblListItem{}(K0:SortKItem{})))) $)
REVELT-axiom-29 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-K0 ( \kore-exists \kore-sort-SortList kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortList kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblListItem kore-element-var-K0 ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortMap{}, \forall{R}(K1:SortKItem{}, \forall{R}(K2:SortKItem{}, \exists{R}(Val:SortMap{}, \equals{SortMap{}, R}(Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{})))))) $)
REVELT-axiom-30 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-K1 ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-K2 ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblMap'Coln'update kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 ) ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortSet{}, \forall{R}(K1:SortSet{}, \exists{R}(Val:SortSet{}, \equals{SortSet{}, R}(Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))))) $)
REVELT-axiom-31 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblSet'Coln'difference kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortKItem{}, \forall{R}(K1:SortSet{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))))) $)
REVELT-axiom-32 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblSet'Coln'in kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortKItem{}, \exists{R}(Val:SortSet{}, \equals{SortSet{}, R}(Val:SortSet{}, LblSetItem{}(K0:SortKItem{})))) $)
REVELT-axiom-33 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-K0 ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblSetItem kore-element-var-K0 ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortMap{}, \forall{R}(K1:SortMap{}, \exists{R}(Val:SortMap{}, \equals{SortMap{}, R}(Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))))) $)
REVELT-axiom-34 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortMap{}, \forall{R}(K1:SortMap{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))))) $)
REVELT-axiom-35 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortSet{}, \forall{R}(K1:SortSet{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))))) $)
REVELT-axiom-36 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortBool{}, \forall{R}(K1:SortBool{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))))) $)
REVELT-axiom-37 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortK{}, \forall{R}(K1:SortK{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))))) $)
REVELT-axiom-38 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortBool{}, \forall{R}(K1:SortBool{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))))) $)
REVELT-axiom-39 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortK{}, \forall{R}(K1:SortK{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))))) $)
REVELT-axiom-40 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortList{}, \forall{R}(K1:SortList{}, \exists{R}(Val:SortList{}, \equals{SortList{}, R}(Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))))) $)
REVELT-axiom-44 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortList kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortList kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortList kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortList kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'List'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortSet{}, \forall{R}(K1:SortSet{}, \exists{R}(Val:SortSet{}, \equals{SortSet{}, R}(Val:SortSet{}, Lbl'Unds'Set'Unds'{}(K0:SortSet{}, K1:SortSet{}))))) $)
REVELT-axiom-54 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'Set'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortMap{}, \forall{R}(K1:SortKItem{}, \exists{R}(Val:SortMap{}, \equals{SortMap{}, R}(Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))))) $)
REVELT-axiom-55 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortMap{}, \forall{R}(K1:SortKItem{}, \forall{R}(K2:SortKItem{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{})))))) $)
REVELT-axiom-56 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-K1 ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-K2 ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 ) ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortBool{}, \forall{R}(K1:SortBool{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))))) $)
REVELT-axiom-57 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'andBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortBool{}, \forall{R}(K1:SortBool{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))))) $)
REVELT-axiom-58 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'andThenBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortBool{}, \forall{R}(K1:SortBool{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))))) $)
REVELT-axiom-59 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'impliesBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortKItem{}, \forall{R}(K1:SortList{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(K0:SortKItem{}, K1:SortList{}))))) $)
REVELT-axiom-60 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortList kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortKItem{}, \forall{R}(K1:SortMap{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))))) $)
REVELT-axiom-61 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortBool{}, \forall{R}(K1:SortBool{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(K0:SortBool{}, K1:SortBool{}))))) $)
REVELT-axiom-62 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortBool{}, \forall{R}(K1:SortBool{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))))) $)
REVELT-axiom-63 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'orElseBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortBool{}, \forall{R}(K1:SortBool{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))))) $)
REVELT-axiom-64 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'xorBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortKItem{}, \forall{R}(K1:SortKItem{}, \exists{R}(Val:SortMap{}, \equals{SortMap{}, R}(Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))))) $)
REVELT-axiom-65 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortSet{}, \forall{R}(K1:SortSet{}, \exists{R}(Val:SortSet{}, \equals{SortSet{}, R}(Val:SortSet{}, Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))))) $)
REVELT-axiom-66 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortSet{}, \forall{R}(K1:SortSet{}, \exists{R}(Val:SortSet{}, \equals{SortSet{}, R}(Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))))) $)
REVELT-axiom-67 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortMap{}, \exists{R}(Val:SortSet{}, \equals{SortSet{}, R}(Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{})))) $)
REVELT-axiom-68 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-K0 ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map kore-element-var-K0 ) ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R}(Val:SortGeneratedCounterCellOpt{}, LblnoGeneratedCounterCell{}())) $)
REVELT-axiom-69 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-Val \kore-symbol-LblnoGeneratedCounterCell ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R}(Val:SortKCellOpt{}, LblnoKCell{}())) $)
REVELT-axiom-70 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-Val \kore-symbol-LblnoKCell ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortBool{}, \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{})))) $)
REVELT-axiom-71 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-K0 ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblnotBool'Unds' kore-element-var-K0 ) ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortRECElt{}, \equals{SortRECElt{}, R}(Val:SortRECElt{}, Lblreca'LParRParUnds'REVELT-SYNTAX'Unds'RECElt{}())) $)
REVELT-axiom-72 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortRECElt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortRECElt kore-sort-var-R kore-element-var-Val \kore-symbol-Lblreca'LParRParUnds'REVELT-SYNTAX'Unds'RECElt ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortRECElt{}, \equals{SortRECElt{}, R}(Val:SortRECElt{}, Lblrecb'LParRParUnds'REVELT-SYNTAX'Unds'RECElt{}())) $)
REVELT-axiom-77 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortRECElt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortRECElt kore-sort-var-R kore-element-var-Val \kore-symbol-Lblrecb'LParRParUnds'REVELT-SYNTAX'Unds'RECElt ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortRECElt{}, \equals{SortRECElt{}, R}(Val:SortRECElt{}, Lblrecc'LParRParUnds'REVELT-SYNTAX'Unds'RECElt{}())) $)
REVELT-axiom-81 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortRECElt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortRECElt kore-sort-var-R kore-element-var-Val \kore-symbol-Lblrecc'LParRParUnds'REVELT-SYNTAX'Unds'RECElt ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortRECElt{}, \equals{SortRECElt{}, R}(Val:SortRECElt{}, Lblrecd'LParRParUnds'REVELT-SYNTAX'Unds'RECElt{}())) $)
REVELT-axiom-84 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortRECElt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortRECElt kore-sort-var-R kore-element-var-Val \kore-symbol-Lblrecd'LParRParUnds'REVELT-SYNTAX'Unds'RECElt ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortRECElt{}, \equals{SortRECElt{}, R}(Val:SortRECElt{}, Lblrece'LParRParUnds'REVELT-SYNTAX'Unds'RECElt{}())) $)
REVELT-axiom-86 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortRECElt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortRECElt kore-sort-var-R kore-element-var-Val \kore-symbol-Lblrece'LParRParUnds'REVELT-SYNTAX'Unds'RECElt ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortRECElt{}, \forall{R}(K1:SortRECList{}, \exists{R}(Val:SortRECList{}, \equals{SortRECList{}, R}(Val:SortRECList{}, Lblrecl'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECElt'Unds'RECList{}(K0:SortRECElt{}, K1:SortRECList{}))))) $)
REVELT-axiom-87 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortRECElt kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortRECList kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortRECList kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortRECList kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblrecl'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECElt'Unds'RECList kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortRECList{}, \equals{SortRECList{}, R}(Val:SortRECList{}, Lblrecnil'LParRParUnds'REVELT-SYNTAX'Unds'RECList{}())) $)
REVELT-axiom-90 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortRECList kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortRECList kore-sort-var-R kore-element-var-Val \kore-symbol-Lblrecnil'LParRParUnds'REVELT-SYNTAX'Unds'RECList ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortMap{}, \forall{R}(K1:SortSet{}, \exists{R}(Val:SortMap{}, \equals{SortMap{}, R}(Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))))) $)
REVELT-axiom-91 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortList{}, \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(K0:SortList{})))) $)
REVELT-axiom-92 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortList kore-sort-var-R kore-element-var-K0 ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List kore-element-var-K0 ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortMap{}, \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(K0:SortMap{})))) $)
REVELT-axiom-93 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-K0 ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map kore-element-var-K0 ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortSet{}, \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{})))) $)
REVELT-axiom-94 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-K0 ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set kore-element-var-K0 ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortKItem{}, \forall{R}(K1:SortKItem{}, \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, Lblthen'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'KItem'Unds'KItem'Unds'KItem{}(K0:SortKItem{}, K1:SortKItem{}))))) $)
REVELT-axiom-95 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblthen'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'KItem'Unds'KItem'Unds'KItem kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(K0:SortMap{}, \forall{R}(K1:SortMap{}, \exists{R}(Val:SortMap{}, \equals{SortMap{}, R}(Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))))) $)
REVELT-axiom-97 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-K0 ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-K1 ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortK{}, \forall{R}(VarB1:SortK{}, \forall{R}(VarC:SortBool{}, \implies{R}(\equals{SortBool{}, R}(VarC:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\equals{SortK{}, R}(Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(VarC:SortBool{}, VarB1:SortK{}, Var'Unds'0:SortK{}), VarB1:SortK{}), \top{R}()))))) $)
REVELT-axiom-115 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarB1 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarC ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-VarC ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortK kore-sort-var-R ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort \kore-sort-SortK kore-element-var-VarC kore-element-var-VarB1 kore-element-var-Var'Unds'0 ) kore-element-var-VarB1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarB2:SortK{}, \forall{R}(VarC:SortBool{}, \forall{R}(Var'Unds'0:SortK{}, \implies{R}(\equals{SortBool{}, R}(LblnotBool'Unds'{}(VarC:SortBool{}), \dv{SortBool{}}("true")), \and{R}(\equals{SortK{}, R}(Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(VarC:SortBool{}, Var'Unds'0:SortK{}, VarB2:SortK{}), VarB2:SortK{}), \top{R}()))))) $)
REVELT-axiom-116 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarB2 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarC ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblnotBool'Unds' kore-element-var-VarC ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortK kore-sort-var-R ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort \kore-sort-SortK kore-element-var-VarC kore-element-var-Var'Unds'0 kore-element-var-VarB2 ) kore-element-var-VarB2 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarB1:SortBool{}, \forall{R}(VarB2:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(VarB1:SortBool{}, VarB2:SortBool{}), LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VarB1:SortBool{}, VarB2:SortBool{}))), \top{R}())))) $)
REVELT-axiom-117 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarB1 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarB2 ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' kore-element-var-VarB1 kore-element-var-VarB2 ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' kore-element-var-VarB1 kore-element-var-VarB2 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK2:SortK{}, \forall{R}(VarK1:SortK{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(VarK1:SortK{}, VarK2:SortK{}), LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{}, VarK2:SortK{}))), \top{R}())))) $)
REVELT-axiom-118 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK2 ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK1 ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' kore-element-var-VarK1 kore-element-var-VarK2 ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' kore-element-var-VarK1 kore-element-var-VarK2 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK2:SortBool{}, \forall{R}(VarK1:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarK1:SortBool{}), dotk{}()), kseq{}(inj{SortBool{}, SortKItem{}}(VarK2:SortBool{}), dotk{}())), Lbl'UndsEqlsEqls'Bool'Unds'{}(VarK1:SortBool{}, VarK2:SortBool{})), \top{R}())))) $)
REVELT-axiom-119 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarK2 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarK1 ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-VarK1 ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-VarK2 ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' kore-element-var-VarK1 kore-element-var-VarK2 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \forall{R}(Var'Unds'1:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("false"), Var'Unds'1:SortBool{}), Var'Unds'0:SortBool{}), Var'Unds'1:SortBool{}), \top{R}())))) $)
REVELT-axiom-120 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-Var'Unds'1 ) kore-element-var-Var'Unds'0 ) kore-element-var-Var'Unds'1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \forall{R}(VarB:SortBool{}, \implies{R}(\equals{SortBool{}, R}(Var'Unds'0:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"), Var'Unds'0:SortBool{}), VarB:SortBool{}), VarB:SortBool{}), \equals{SortBool{}, R}(Var'Unds'0:SortBool{}, \dv{SortBool{}}("true")))))) $)
REVELT-axiom-121 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarB ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "true" ) kore-element-var-Var'Unds'0 ) kore-element-var-VarB ) kore-element-var-VarB ) ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-dv \kore-sort-SortBool "true" ) ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \forall{R}(VarB:SortBool{}, \implies{R}(\equals{SortBool{}, R}(Var'Unds'0:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andBool'Unds'{}(VarB:SortBool{}, \and{SortBool{}}(\dv{SortBool{}}("true"), Var'Unds'0:SortBool{})), VarB:SortBool{}), \equals{SortBool{}, R}(Var'Unds'0:SortBool{}, \dv{SortBool{}}("true")))))) $)
REVELT-axiom-122 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarB ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' kore-element-var-VarB ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "true" ) kore-element-var-Var'Unds'0 ) ) kore-element-var-VarB ) ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-dv \kore-sort-SortBool "true" ) ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \forall{R}(Var'Unds'1:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andBool'Unds'{}(Var'Unds'0:SortBool{}, \and{SortBool{}}(\dv{SortBool{}}("false"), Var'Unds'1:SortBool{})), Var'Unds'1:SortBool{}), \top{R}())))) $)
REVELT-axiom-123 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' kore-element-var-Var'Unds'0 ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-Var'Unds'1 ) ) kore-element-var-Var'Unds'1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \forall{R}(Var'Unds'1:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andThenBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("false"), Var'Unds'1:SortBool{}), Var'Unds'0:SortBool{}), Var'Unds'1:SortBool{}), \top{R}())))) $)
REVELT-axiom-124 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-Var'Unds'1 ) kore-element-var-Var'Unds'0 ) kore-element-var-Var'Unds'1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \forall{R}(VarK:SortBool{}, \implies{R}(\equals{SortBool{}, R}(Var'Unds'0:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andThenBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"), Var'Unds'0:SortBool{}), VarK:SortBool{}), VarK:SortBool{}), \equals{SortBool{}, R}(Var'Unds'0:SortBool{}, \dv{SortBool{}}("true")))))) $)
REVELT-axiom-125 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "true" ) kore-element-var-Var'Unds'0 ) kore-element-var-VarK ) kore-element-var-VarK ) ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-dv \kore-sort-SortBool "true" ) ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \forall{R}(VarK:SortBool{}, \implies{R}(\equals{SortBool{}, R}(Var'Unds'0:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andThenBool'Unds'{}(VarK:SortBool{}, \and{SortBool{}}(\dv{SortBool{}}("true"), Var'Unds'0:SortBool{})), VarK:SortBool{}), \equals{SortBool{}, R}(Var'Unds'0:SortBool{}, \dv{SortBool{}}("true")))))) $)
REVELT-axiom-126 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andThenBool'Unds' kore-element-var-VarK ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "true" ) kore-element-var-Var'Unds'0 ) ) kore-element-var-VarK ) ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-dv \kore-sort-SortBool "true" ) ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \forall{R}(Var'Unds'1:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andThenBool'Unds'{}(Var'Unds'0:SortBool{}, \and{SortBool{}}(\dv{SortBool{}}("false"), Var'Unds'1:SortBool{})), Var'Unds'1:SortBool{}), \top{R}())))) $)
REVELT-axiom-127 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andThenBool'Unds' kore-element-var-Var'Unds'0 ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-Var'Unds'1 ) ) kore-element-var-Var'Unds'1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \forall{R}(VarB:SortBool{}, \implies{R}(\equals{SortBool{}, R}(Var'Unds'0:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'impliesBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"), Var'Unds'0:SortBool{}), VarB:SortBool{}), VarB:SortBool{}), \equals{SortBool{}, R}(Var'Unds'0:SortBool{}, \dv{SortBool{}}("true")))))) $)
REVELT-axiom-128 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarB ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "true" ) kore-element-var-Var'Unds'0 ) kore-element-var-VarB ) kore-element-var-VarB ) ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-dv \kore-sort-SortBool "true" ) ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarB:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'impliesBool'Unds'{}(VarB:SortBool{}, \dv{SortBool{}}("false")), LblnotBool'Unds'{}(VarB:SortBool{})), \top{R}()))) $)
REVELT-axiom-129 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarB ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'impliesBool'Unds' kore-element-var-VarB ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-symbol-LblnotBool'Unds' kore-element-var-VarB ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \forall{R}(Var'Unds'1:SortBool{}, \implies{R}(\equals{SortBool{}, R}(Var'Unds'1:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'impliesBool'Unds'{}(Var'Unds'0:SortBool{}, \and{SortBool{}}(\dv{SortBool{}}("true"), Var'Unds'1:SortBool{})), Var'Unds'1:SortBool{}), \equals{SortBool{}, R}(Var'Unds'1:SortBool{}, \dv{SortBool{}}("true")))))) $)
REVELT-axiom-130 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'impliesBool'Unds' kore-element-var-Var'Unds'0 ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "true" ) kore-element-var-Var'Unds'1 ) ) kore-element-var-Var'Unds'1 ) ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-dv \kore-sort-SortBool "true" ) ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'impliesBool'Unds'{}(\dv{SortBool{}}("false"), Var'Unds'0:SortBool{}), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-131 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-Var'Unds'0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \forall{R}(Var'Unds'1:SortBool{}, \implies{R}(\equals{SortBool{}, R}(Var'Unds'1:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(\and{SortBool{}}(\dv{SortBool{}}("true"), Var'Unds'1:SortBool{}), Var'Unds'0:SortBool{}), Var'Unds'1:SortBool{}), \equals{SortBool{}, R}(Var'Unds'1:SortBool{}, \dv{SortBool{}}("true")))))) $)
REVELT-axiom-132 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "true" ) kore-element-var-Var'Unds'1 ) kore-element-var-Var'Unds'0 ) kore-element-var-Var'Unds'1 ) ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-dv \kore-sort-SortBool "true" ) ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarB:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(VarB:SortBool{}, \dv{SortBool{}}("false")), VarB:SortBool{}), \top{R}()))) $)
REVELT-axiom-133 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarB ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool kore-element-var-VarB ( \kore-dv \kore-sort-SortBool "false" ) ) kore-element-var-VarB ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \forall{R}(Var'Unds'1:SortBool{}, \implies{R}(\equals{SortBool{}, R}(Var'Unds'1:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Var'Unds'0:SortBool{}, \and{SortBool{}}(\dv{SortBool{}}("true"), Var'Unds'1:SortBool{})), Var'Unds'1:SortBool{}), \equals{SortBool{}, R}(Var'Unds'1:SortBool{}, \dv{SortBool{}}("true")))))) $)
REVELT-axiom-134 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool kore-element-var-Var'Unds'0 ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "true" ) kore-element-var-Var'Unds'1 ) ) kore-element-var-Var'Unds'1 ) ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-dv \kore-sort-SortBool "true" ) ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarB:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(\dv{SortBool{}}("false"), VarB:SortBool{}), VarB:SortBool{}), \top{R}()))) $)
REVELT-axiom-135 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarB ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-VarB ) kore-element-var-VarB ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \forall{R}(Var'Unds'1:SortBool{}, \implies{R}(\equals{SortBool{}, R}(Var'Unds'1:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orElseBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"), Var'Unds'1:SortBool{}), Var'Unds'0:SortBool{}), Var'Unds'1:SortBool{}), \equals{SortBool{}, R}(Var'Unds'1:SortBool{}, \dv{SortBool{}}("true")))))) $)
REVELT-axiom-136 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "true" ) kore-element-var-Var'Unds'1 ) kore-element-var-Var'Unds'0 ) kore-element-var-Var'Unds'1 ) ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-dv \kore-sort-SortBool "true" ) ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orElseBool'Unds'{}(VarK:SortBool{}, \dv{SortBool{}}("false")), VarK:SortBool{}), \top{R}()))) $)
REVELT-axiom-137 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orElseBool'Unds' kore-element-var-VarK ( \kore-dv \kore-sort-SortBool "false" ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \forall{R}(Var'Unds'1:SortBool{}, \implies{R}(\equals{SortBool{}, R}(Var'Unds'1:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orElseBool'Unds'{}(Var'Unds'0:SortBool{}, \and{SortBool{}}(\dv{SortBool{}}("true"), Var'Unds'1:SortBool{})), Var'Unds'1:SortBool{}), \equals{SortBool{}, R}(Var'Unds'1:SortBool{}, \dv{SortBool{}}("true")))))) $)
REVELT-axiom-138 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orElseBool'Unds' kore-element-var-Var'Unds'0 ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "true" ) kore-element-var-Var'Unds'1 ) ) kore-element-var-Var'Unds'1 ) ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-dv \kore-sort-SortBool "true" ) ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orElseBool'Unds'{}(\dv{SortBool{}}("false"), VarK:SortBool{}), VarK:SortBool{}), \top{R}()))) $)
REVELT-axiom-139 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-VarK ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarB:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'xorBool'Unds'{}(VarB:SortBool{}, VarB:SortBool{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-140 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarB ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'xorBool'Unds' kore-element-var-VarB kore-element-var-VarB ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarB:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'xorBool'Unds'{}(VarB:SortBool{}, \dv{SortBool{}}("false")), VarB:SortBool{}), \top{R}()))) $)
REVELT-axiom-141 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarB ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'xorBool'Unds' kore-element-var-VarB ( \kore-dv \kore-sort-SortBool "false" ) ) kore-element-var-VarB ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarB:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'xorBool'Unds'{}(\dv{SortBool{}}("false"), VarB:SortBool{}), VarB:SortBool{}), \top{R}()))) $)
REVELT-axiom-142 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarB ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'xorBool'Unds' ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-VarB ) kore-element-var-VarB ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarS2:SortSet{}, \forall{R}(VarS1:SortSet{}, \implies{R}(\top{R}(), \and{R}(\equals{SortSet{}, R}(Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(VarS1:SortSet{}, VarS2:SortSet{}), Lbl'Unds'Set'Unds'{}(VarS1:SortSet{}, LblSet'Coln'difference{}(VarS2:SortSet{}, VarS1:SortSet{}))), \top{R}())))) $)
REVELT-axiom-143 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-VarS2 ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-VarS1 ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortSet kore-sort-var-R ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set kore-element-var-VarS1 kore-element-var-VarS2 ) ( \kore-symbol-Lbl'Unds'Set'Unds' kore-element-var-VarS1 ( \kore-symbol-LblSet'Coln'difference kore-element-var-VarS2 kore-element-var-VarS1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'DotVar0:SortKCell{}, \forall{R}(VarCell:SortGeneratedCounterCell{}, \implies{R}(\top{R}(), \and{R}(\equals{SortGeneratedCounterCell{}, R}(LblgetGeneratedCounterCell{}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'DotVar0:SortKCell{}, VarCell:SortGeneratedCounterCell{})), VarCell:SortGeneratedCounterCell{}), \top{R}())))) $)
REVELT-axiom-144 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKCell kore-sort-var-R kore-element-var-Var'Unds'DotVar0 ( \kore-forall \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-VarCell ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R ( \kore-symbol-LblgetGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' kore-element-var-Var'Unds'DotVar0 kore-element-var-VarCell ) ) kore-element-var-VarCell ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortGeneratedCounterCell{}, R}(LblinitGeneratedCounterCell{}(), Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0"))), \top{R}())) $)
REVELT-axiom-145 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarInit:SortMap{}, \implies{R}(\top{R}(), \and{R}(\equals{SortGeneratedTopCell{}, R}(LblinitGeneratedTopCell{}(VarInit:SortMap{}), Lbl'-LT-'generatedTop'-GT-'{}(LblinitKCell{}(VarInit:SortMap{}), LblinitGeneratedCounterCell{}())), \top{R}()))) $)
REVELT-axiom-146 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-VarInit ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-VarInit ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VarInit ) \kore-symbol-LblinitGeneratedCounterCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarInit:SortMap{}, \implies{R}(\top{R}(), \and{R}(\equals{SortKCell{}, R}(LblinitKCell{}(VarInit:SortMap{}), Lbl'-LT-'k'-GT-'{}(kseq{}(Lblproject'Coln'KItem{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{}, inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))), dotk{}())), dotk{}()))), \top{R}()))) $)
REVELT-axiom-147 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-VarInit ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCell kore-sort-var-R ( \kore-symbol-LblinitKCell kore-element-var-VarInit ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-symbol-Lblproject'Coln'KItem ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup kore-element-var-VarInit ( \kore-symbol-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'0:SortBool{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'0:SortBool{}), dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisBool{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-148 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-Var'Unds'0 ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBool kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarBool:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisBool{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}), dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-149 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarBool ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBool ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-VarBool ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'1:SortCell{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(inj{SortCell{}, SortKItem{}}(Var'Unds'1:SortCell{}), dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisCell{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-150 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortCell kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortCell \kore-sort-SortKItem kore-element-var-Var'Unds'1 ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisCell kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarCell:SortCell{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisCell{}(kseq{}(inj{SortCell{}, SortKItem{}}(VarCell:SortCell{}), dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-151 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortCell kore-sort-var-R kore-element-var-VarCell ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisCell ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortCell \kore-sort-SortKItem kore-element-var-VarCell ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'0:SortGeneratedCounterCell{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(Var'Unds'0:SortGeneratedCounterCell{}), dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisGeneratedCounterCell{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-152 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortGeneratedCounterCell \kore-sort-SortKItem kore-element-var-Var'Unds'0 ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedCounterCell kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarGeneratedCounterCell:SortGeneratedCounterCell{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisGeneratedCounterCell{}(kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}), dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-153 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-VarGeneratedCounterCell ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedCounterCell ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortGeneratedCounterCell \kore-sort-SortKItem kore-element-var-VarGeneratedCounterCell ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'0:SortGeneratedCounterCellOpt{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(Var'Unds'0:SortGeneratedCounterCellOpt{}), dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisGeneratedCounterCellOpt{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-154 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortKItem kore-element-var-Var'Unds'0 ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedCounterCellOpt kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisGeneratedCounterCellOpt{}(kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{}), dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-155 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-VarGeneratedCounterCellOpt ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedCounterCellOpt ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortKItem kore-element-var-VarGeneratedCounterCellOpt ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'1:SortGeneratedTopCell{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(Var'Unds'1:SortGeneratedTopCell{}), dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisGeneratedTopCell{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-156 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedTopCell kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortGeneratedTopCell \kore-sort-SortKItem kore-element-var-Var'Unds'1 ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedTopCell kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarGeneratedTopCell:SortGeneratedTopCell{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisGeneratedTopCell{}(kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}), dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-157 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortGeneratedTopCell kore-sort-var-R kore-element-var-VarGeneratedTopCell ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedTopCell ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortGeneratedTopCell \kore-sort-SortKItem kore-element-var-VarGeneratedTopCell ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'0:SortGeneratedTopCellFragment{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(Var'Unds'0:SortGeneratedTopCellFragment{}), dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisGeneratedTopCellFragment{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-158 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedTopCellFragment kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortKItem kore-element-var-Var'Unds'0 ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedTopCellFragment kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisGeneratedTopCellFragment{}(kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}), dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-159 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortGeneratedTopCellFragment kore-sort-var-R kore-element-var-VarGeneratedTopCellFragment ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedTopCellFragment ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortKItem kore-element-var-VarGeneratedTopCellFragment ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'0:SortInt{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'0:SortInt{}), dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisInt{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-160 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-Var'Unds'0 ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisInt kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarInt:SortInt{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisInt{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}), dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-161 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortInt kore-sort-var-R kore-element-var-VarInt ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisInt ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VarInt ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisK{}(VarK:SortK{}), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-162 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisK kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'1:SortKCell{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(inj{SortKCell{}, SortKItem{}}(Var'Unds'1:SortKCell{}), dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisKCell{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-163 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortKCell kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortKCell \kore-sort-SortKItem kore-element-var-Var'Unds'1 ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKCell kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarKCell:SortKCell{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisKCell{}(kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}), dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-164 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKCell kore-sort-var-R kore-element-var-VarKCell ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKCell ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortKCell \kore-sort-SortKItem kore-element-var-VarKCell ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'1:SortKCellOpt{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(inj{SortKCellOpt{}, SortKItem{}}(Var'Unds'1:SortKCellOpt{}), dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisKCellOpt{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-165 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortKCellOpt \kore-sort-SortKItem kore-element-var-Var'Unds'1 ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKCellOpt kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarKCellOpt:SortKCellOpt{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisKCellOpt{}(kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}), dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-166 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-VarKCellOpt ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKCellOpt ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortKCellOpt \kore-sort-SortKItem kore-element-var-VarKCellOpt ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'1:SortKConfigVar{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(inj{SortKConfigVar{}, SortKItem{}}(Var'Unds'1:SortKConfigVar{}), dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisKConfigVar{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-167 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortKConfigVar kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-Var'Unds'1 ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKConfigVar kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarKConfigVar:SortKConfigVar{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisKConfigVar{}(kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}), dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-168 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKConfigVar kore-sort-var-R kore-element-var-VarKConfigVar ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKConfigVar ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-VarKConfigVar ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'0:SortKItem{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(Var'Unds'0:SortKItem{}, dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisKItem{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-169 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq kore-element-var-Var'Unds'0 \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKItem kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarKItem:SortKItem{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisKItem{}(kseq{}(VarKItem:SortKItem{}, dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-170 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-VarKItem ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKItem ( \kore-symbol-kseq kore-element-var-VarKItem \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'0:SortList{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(inj{SortList{}, SortKItem{}}(Var'Unds'0:SortList{}), dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisList{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-171 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortList kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortList \kore-sort-SortKItem kore-element-var-Var'Unds'0 ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisList kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarList:SortList{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisList{}(kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}), dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-172 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortList kore-sort-var-R kore-element-var-VarList ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisList ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortList \kore-sort-SortKItem kore-element-var-VarList ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'1:SortMap{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(inj{SortMap{}, SortKItem{}}(Var'Unds'1:SortMap{}), dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisMap{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-173 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortMap \kore-sort-SortKItem kore-element-var-Var'Unds'1 ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisMap kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarMap:SortMap{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisMap{}(kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}), dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-174 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-VarMap ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisMap ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortMap \kore-sort-SortKItem kore-element-var-VarMap ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'1:SortRECElt{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(inj{SortRECElt{}, SortKItem{}}(Var'Unds'1:SortRECElt{}), dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisRECElt{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-175 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortRECElt kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortRECElt \kore-sort-SortKItem kore-element-var-Var'Unds'1 ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisRECElt kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarRECElt:SortRECElt{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisRECElt{}(kseq{}(inj{SortRECElt{}, SortKItem{}}(VarRECElt:SortRECElt{}), dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-176 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortRECElt kore-sort-var-R kore-element-var-VarRECElt ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisRECElt ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortRECElt \kore-sort-SortKItem kore-element-var-VarRECElt ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'1:SortRECList{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(inj{SortRECList{}, SortKItem{}}(Var'Unds'1:SortRECList{}), dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisRECList{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-177 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortRECList kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortRECList \kore-sort-SortKItem kore-element-var-Var'Unds'1 ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisRECList kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarRECList:SortRECList{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisRECList{}(kseq{}(inj{SortRECList{}, SortKItem{}}(VarRECList:SortRECList{}), dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-178 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortRECList kore-sort-var-R kore-element-var-VarRECList ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisRECList ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortRECList \kore-sort-SortKItem kore-element-var-VarRECList ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(Var'Unds'1:SortSet{}, \and{R}(\top{R}(), \and{R}(\ceil{SortK{}, R}(\and{SortK{}}(VarK:SortK{}, kseq{}(inj{SortSet{}, SortKItem{}}(Var'Unds'1:SortSet{}), dotk{}()))), \top{R}()))), \bottom{R}())), \top{R}()), \and{R}(\equals{SortBool{}, R}(LblisSet{}(VarK:SortK{}), \dv{SortBool{}}("false")), \top{R}()))) $)
REVELT-axiom-179 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Var'Unds'1 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-ceil \kore-sort-SortK kore-sort-var-R ( \kore-and \kore-sort-SortK kore-element-var-VarK ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortSet \kore-sort-SortKItem kore-element-var-Var'Unds'1 ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisSet kore-element-var-VarK ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarSet:SortSet{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblisSet{}(kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}), dotk{}())), \dv{SortBool{}}("true")), \top{R}()))) $)
REVELT-axiom-180 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-VarSet ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisSet ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortSet \kore-sort-SortKItem kore-element-var-VarSet ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortBool{}, \implies{R}(\equals{SortBool{}, R}(Var'Unds'0:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\equals{SortBool{}, R}(LblnotBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"), Var'Unds'0:SortBool{})), \dv{SortBool{}}("false")), \equals{SortBool{}, R}(Var'Unds'0:SortBool{}, \dv{SortBool{}}("true"))))) $)
REVELT-axiom-181 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblnotBool'Unds' ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "true" ) kore-element-var-Var'Unds'0 ) ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-dv \kore-sort-SortBool "true" ) ) ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(LblnotBool'Unds'{}(\dv{SortBool{}}("false")), \dv{SortBool{}}("true")), \top{R}())) $)
REVELT-axiom-182 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblnotBool'Unds' ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortBool{}, \implies{R}(\top{R}(), \and{R}(\equals{SortBool{}, R}(Lblproject'Coln'Bool{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarK:SortBool{}), dotk{}())), VarK:SortBool{}), \top{R}()))) $)
REVELT-axiom-183 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortBool kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Bool ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-VarK ) \kore-symbol-dotk ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortCell{}, \implies{R}(\top{R}(), \and{R}(\equals{SortCell{}, R}(Lblproject'Coln'Cell{}(kseq{}(inj{SortCell{}, SortKItem{}}(VarK:SortCell{}), dotk{}())), VarK:SortCell{}), \top{R}()))) $)
REVELT-axiom-184 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortCell kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortCell kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Cell ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortCell \kore-sort-SortKItem kore-element-var-VarK ) \kore-symbol-dotk ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortGeneratedCounterCell{}, \implies{R}(\top{R}(), \and{R}(\equals{SortGeneratedCounterCell{}, R}(Lblproject'Coln'GeneratedCounterCell{}(kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarK:SortGeneratedCounterCell{}), dotk{}())), VarK:SortGeneratedCounterCell{}), \top{R}()))) $)
REVELT-axiom-185 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortGeneratedCounterCell \kore-sort-SortKItem kore-element-var-VarK ) \kore-symbol-dotk ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortGeneratedCounterCellOpt{}, \implies{R}(\top{R}(), \and{R}(\equals{SortGeneratedCounterCellOpt{}, R}(Lblproject'Coln'GeneratedCounterCellOpt{}(kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarK:SortGeneratedCounterCellOpt{}), dotk{}())), VarK:SortGeneratedCounterCellOpt{}), \top{R}()))) $)
REVELT-axiom-186 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortKItem kore-element-var-VarK ) \kore-symbol-dotk ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortGeneratedTopCell{}, \implies{R}(\top{R}(), \and{R}(\equals{SortGeneratedTopCell{}, R}(Lblproject'Coln'GeneratedTopCell{}(kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarK:SortGeneratedTopCell{}), dotk{}())), VarK:SortGeneratedTopCell{}), \top{R}()))) $)
REVELT-axiom-187 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortGeneratedTopCell kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortGeneratedTopCell \kore-sort-SortKItem kore-element-var-VarK ) \kore-symbol-dotk ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortGeneratedTopCellFragment{}, \implies{R}(\top{R}(), \and{R}(\equals{SortGeneratedTopCellFragment{}, R}(Lblproject'Coln'GeneratedTopCellFragment{}(kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarK:SortGeneratedTopCellFragment{}), dotk{}())), VarK:SortGeneratedTopCellFragment{}), \top{R}()))) $)
REVELT-axiom-188 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortGeneratedTopCellFragment kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCellFragment kore-sort-var-R ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortKItem kore-element-var-VarK ) \kore-symbol-dotk ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortInt{}, \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lblproject'Coln'Int{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarK:SortInt{}), dotk{}())), VarK:SortInt{}), \top{R}()))) $)
REVELT-axiom-189 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortInt kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Int ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VarK ) \kore-symbol-dotk ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortK{}, \implies{R}(\top{R}(), \and{R}(\equals{SortK{}, R}(Lblproject'Coln'K{}(VarK:SortK{}), VarK:SortK{}), \top{R}()))) $)
REVELT-axiom-190 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortK kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortK kore-sort-var-R ( \kore-symbol-Lblproject'Coln'K kore-element-var-VarK ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortKCell{}, \implies{R}(\top{R}(), \and{R}(\equals{SortKCell{}, R}(Lblproject'Coln'KCell{}(kseq{}(inj{SortKCell{}, SortKItem{}}(VarK:SortKCell{}), dotk{}())), VarK:SortKCell{}), \top{R}()))) $)
REVELT-axiom-191 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKCell kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCell kore-sort-var-R ( \kore-symbol-Lblproject'Coln'KCell ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortKCell \kore-sort-SortKItem kore-element-var-VarK ) \kore-symbol-dotk ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortKCellOpt{}, \implies{R}(\top{R}(), \and{R}(\equals{SortKCellOpt{}, R}(Lblproject'Coln'KCellOpt{}(kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarK:SortKCellOpt{}), dotk{}())), VarK:SortKCellOpt{}), \top{R}()))) $)
REVELT-axiom-192 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCellOpt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'KCellOpt ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortKCellOpt \kore-sort-SortKItem kore-element-var-VarK ) \kore-symbol-dotk ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortKItem{}, \implies{R}(\top{R}(), \and{R}(\equals{SortKItem{}, R}(Lblproject'Coln'KItem{}(kseq{}(VarK:SortKItem{}, dotk{}())), VarK:SortKItem{}), \top{R}()))) $)
REVELT-axiom-193 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortKItem kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKItem kore-sort-var-R ( \kore-symbol-Lblproject'Coln'KItem ( \kore-symbol-kseq kore-element-var-VarK \kore-symbol-dotk ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortList{}, \implies{R}(\top{R}(), \and{R}(\equals{SortList{}, R}(Lblproject'Coln'List{}(kseq{}(inj{SortList{}, SortKItem{}}(VarK:SortList{}), dotk{}())), VarK:SortList{}), \top{R}()))) $)
REVELT-axiom-194 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortList kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortList kore-sort-var-R ( \kore-symbol-Lblproject'Coln'List ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortList \kore-sort-SortKItem kore-element-var-VarK ) \kore-symbol-dotk ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortMap{}, \implies{R}(\top{R}(), \and{R}(\equals{SortMap{}, R}(Lblproject'Coln'Map{}(kseq{}(inj{SortMap{}, SortKItem{}}(VarK:SortMap{}), dotk{}())), VarK:SortMap{}), \top{R}()))) $)
REVELT-axiom-195 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortMap kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Map ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortMap \kore-sort-SortKItem kore-element-var-VarK ) \kore-symbol-dotk ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortRECElt{}, \implies{R}(\top{R}(), \and{R}(\equals{SortRECElt{}, R}(Lblproject'Coln'RECElt{}(kseq{}(inj{SortRECElt{}, SortKItem{}}(VarK:SortRECElt{}), dotk{}())), VarK:SortRECElt{}), \top{R}()))) $)
REVELT-axiom-196 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortRECElt kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortRECElt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'RECElt ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortRECElt \kore-sort-SortKItem kore-element-var-VarK ) \kore-symbol-dotk ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortRECList{}, \implies{R}(\top{R}(), \and{R}(\equals{SortRECList{}, R}(Lblproject'Coln'RECList{}(kseq{}(inj{SortRECList{}, SortKItem{}}(VarK:SortRECList{}), dotk{}())), VarK:SortRECList{}), \top{R}()))) $)
REVELT-axiom-197 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortRECList kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortRECList kore-sort-var-R ( \kore-symbol-Lblproject'Coln'RECList ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortRECList \kore-sort-SortKItem kore-element-var-VarK ) \kore-symbol-dotk ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarK:SortSet{}, \implies{R}(\top{R}(), \and{R}(\equals{SortSet{}, R}(Lblproject'Coln'Set{}(kseq{}(inj{SortSet{}, SortKItem{}}(VarK:SortSet{}), dotk{}())), VarK:SortSet{}), \top{R}()))) $)
REVELT-axiom-198 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortSet kore-sort-var-R kore-element-var-VarK ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortSet kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Set ( \kore-symbol-kseq ( \kore-symbol-inj \kore-sort-SortSet \kore-sort-SortKItem kore-element-var-VarK ) \kore-symbol-dotk ) ) kore-element-var-VarK ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarREC'Unds'V'Unds'E0:SortRECElt{}, \forall{R}(VarREC'Unds'V'Unds'L1:SortRECList{}, \forall{R}(VarREC'Unds'V'Unds'L2:SortRECList{}, \implies{R}(\top{R}(), \and{R}(\equals{SortRECList{}, R}(Lblrecconc'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList'Unds'RECList{}(Lblrecl'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECElt'Unds'RECList{}(VarREC'Unds'V'Unds'E0:SortRECElt{}, VarREC'Unds'V'Unds'L1:SortRECList{}), VarREC'Unds'V'Unds'L2:SortRECList{}), Lblrecl'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECElt'Unds'RECList{}(VarREC'Unds'V'Unds'E0:SortRECElt{}, Lblrecconc'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList'Unds'RECList{}(VarREC'Unds'V'Unds'L1:SortRECList{}, VarREC'Unds'V'Unds'L2:SortRECList{}))), \top{R}()))))) $)
REVELT-axiom-199 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortRECElt kore-sort-var-R kore-element-var-VarREC'Unds'V'Unds'E0 ( \kore-forall \kore-sort-SortRECList kore-sort-var-R kore-element-var-VarREC'Unds'V'Unds'L1 ( \kore-forall \kore-sort-SortRECList kore-sort-var-R kore-element-var-VarREC'Unds'V'Unds'L2 ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortRECList kore-sort-var-R ( \kore-symbol-Lblrecconc'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList'Unds'RECList ( \kore-symbol-Lblrecl'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECElt'Unds'RECList kore-element-var-VarREC'Unds'V'Unds'E0 kore-element-var-VarREC'Unds'V'Unds'L1 ) kore-element-var-VarREC'Unds'V'Unds'L2 ) ( \kore-symbol-Lblrecl'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECElt'Unds'RECList kore-element-var-VarREC'Unds'V'Unds'E0 ( \kore-symbol-Lblrecconc'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList'Unds'RECList kore-element-var-VarREC'Unds'V'Unds'L1 kore-element-var-VarREC'Unds'V'Unds'L2 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarREC'Unds'V'Unds'L2:SortRECList{}, \implies{R}(\top{R}(), \and{R}(\equals{SortRECList{}, R}(Lblrecconc'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList'Unds'RECList{}(Lblrecnil'LParRParUnds'REVELT-SYNTAX'Unds'RECList{}(), VarREC'Unds'V'Unds'L2:SortRECList{}), VarREC'Unds'V'Unds'L2:SortRECList{}), \top{R}()))) $)
REVELT-axiom-200 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortRECList kore-sort-var-R kore-element-var-VarREC'Unds'V'Unds'L2 ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortRECList kore-sort-var-R ( \kore-symbol-Lblrecconc'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList'Unds'RECList \kore-symbol-Lblrecnil'LParRParUnds'REVELT-SYNTAX'Unds'RECList kore-element-var-VarREC'Unds'V'Unds'L2 ) kore-element-var-VarREC'Unds'V'Unds'L2 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarREC'Unds'V'Unds'L1:SortRECList{}, \implies{R}(\top{R}(), \and{R}(\equals{SortRECList{}, R}(Lblrecdup'LParUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList{}(VarREC'Unds'V'Unds'L1:SortRECList{}), Lblrecconc'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList'Unds'RECList{}(VarREC'Unds'V'Unds'L1:SortRECList{}, VarREC'Unds'V'Unds'L1:SortRECList{})), \top{R}()))) $)
REVELT-axiom-201 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortRECList kore-sort-var-R kore-element-var-VarREC'Unds'V'Unds'L1 ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortRECList kore-sort-var-R ( \kore-symbol-Lblrecdup'LParUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList kore-element-var-VarREC'Unds'V'Unds'L1 ) ( \kore-symbol-Lblrecconc'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList'Unds'RECList kore-element-var-VarREC'Unds'V'Unds'L1 kore-element-var-VarREC'Unds'V'Unds'L1 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(Var'Unds'0:SortRECList{}, \implies{R}(\top{R}(), \and{R}(\equals{SortRECList{}, R}(Lblrecrev'LParUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList{}(\and{SortRECList{}}(Lblrecnil'LParRParUnds'REVELT-SYNTAX'Unds'RECList{}(), Var'Unds'0:SortRECList{})), Var'Unds'0:SortRECList{}), \top{R}()))) $)
REVELT-axiom-202 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortRECList kore-sort-var-R kore-element-var-Var'Unds'0 ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortRECList kore-sort-var-R ( \kore-symbol-Lblrecrev'LParUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList ( \kore-and \kore-sort-SortRECList \kore-symbol-Lblrecnil'LParRParUnds'REVELT-SYNTAX'Unds'RECList kore-element-var-Var'Unds'0 ) ) kore-element-var-Var'Unds'0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) $.

$( axiom {R} \forall{R}(VarREC'Unds'V'Unds'E0:SortRECElt{}, \forall{R}(VarREC'Unds'V'Unds'L1:SortRECList{}, \implies{R}(\top{R}(), \and{R}(\equals{SortRECList{}, R}(Lblrecrev'LParUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList{}(Lblrecl'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECElt'Unds'RECList{}(VarREC'Unds'V'Unds'E0:SortRECElt{}, VarREC'Unds'V'Unds'L1:SortRECList{})), Lblrecconc'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList'Unds'RECList{}(Lblrecrev'LParUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList{}(VarREC'Unds'V'Unds'L1:SortRECList{}), Lblrecl'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECElt'Unds'RECList{}(VarREC'Unds'V'Unds'E0:SortRECElt{}, Lblrecnil'LParRParUnds'REVELT-SYNTAX'Unds'RECList{}()))), \top{R}())))) $)
REVELT-axiom-203 $a |- ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall \kore-sort-SortRECElt kore-sort-var-R kore-element-var-VarREC'Unds'V'Unds'E0 ( \kore-forall \kore-sort-SortRECList kore-sort-var-R kore-element-var-VarREC'Unds'V'Unds'L1 ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortRECList kore-sort-var-R ( \kore-symbol-Lblrecrev'LParUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList ( \kore-symbol-Lblrecl'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECElt'Unds'RECList kore-element-var-VarREC'Unds'V'Unds'E0 kore-element-var-VarREC'Unds'V'Unds'L1 ) ) ( \kore-symbol-Lblrecconc'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList'Unds'RECList ( \kore-symbol-Lblrecrev'LParUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECList kore-element-var-VarREC'Unds'V'Unds'L1 ) ( \kore-symbol-Lblrecl'LParUndsCommUndsRParUnds'REVELT-SYNTAX'Unds'RECList'Unds'RECElt'Unds'RECList kore-element-var-VarREC'Unds'V'Unds'E0 \kore-symbol-Lblrecnil'LParRParUnds'REVELT-SYNTAX'Unds'RECList ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) ) ) $.

$( axiom {S1, S2, S3, R} \forall{R}(T:S1, \equals{S3, R}(inj{S2, S3}(inj{S1, S2}(T:S1)), inj{S1, S3}(T:S1))) $)
kore-inj-axiom $a |- ( \kore-forall-sort kore-sort-var-S1 ( \kore-forall-sort kore-sort-var-S2 ( \kore-forall-sort kore-sort-var-S3 ( \kore-forall-sort kore-sort-var-R ( \kore-valid kore-sort-var-R ( \kore-forall kore-sort-var-S1 kore-sort-var-R kore-element-var-T ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-symbol-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-symbol-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) ) ( \kore-symbol-inj kore-sort-var-S1 kore-sort-var-S3 kore-element-var-T ) ) ) ) ) ) ) ) $.
